#!/bin/bash
# dockerfile path relatively to current directory 

dockerfile="$1"

destination="$2"

context="$(dirname ${dockerfile})"

WORKDIR=$(mktemp -d)
echo $WORKDIR

# prepare chroot

cp -r /kaniko $WORKDIR/

# assuming you have .docker/config.json inside kaniko directory
export DOCKER_CONFIG=/kaniko/.docker/
mkdir -p $WORKDIR/kaniko/workspace

cd $WORKDIR

mkdir dev
sudo mknod -m 666 dev/null c 1 3
sudo mknod -m 666 dev/zero c 1 5

mkdir bin
cp /bin/bash bin/

mkdir -p proc/self
cp /proc/self/mountinfo proc/self/

mkdir etc
cp /etc/resolv.conf etc/
cp /etc/nsswitch.conf etc

mkdir -p etc/ssl/certs
cat /etc/ssl/certs/* > etc/ssl/certs/sa-certificates.crt
mkdir -p var/run/secrets/eks.amazonaws.com/serviceaccount
cat $AWS_WEB_IDENTITY_TOKEN_FILE > var/run/secrets/eks.amazonaws.com/serviceaccount/token

mkdir -p lib/x86_64-linux-gnu
cp /lib/x86_64-linux-gnu/libtinfo.so.6 lib/x86_64-linux-gnu
cp /lib/x86_64-linux-gnu/libc.so.6 lib/x86_64-linux-gnu
mkdir lib64
cp /lib64/ld-linux-x86-64.so.2 lib64/

cp -r ${context}/* kaniko/workspace

cat > .env << END
export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
export AWS_REGION=$AWS_REGION
export AWS_ROLE_ARN=$AWS_ROLE_ARN
export AWS_STS_REGIONAL_ENDPOINTS=regional
export AWS_WEB_IDENTITY_TOKEN_FILE=$AWS_WEB_IDENTITY_TOKEN_FILE
END

sudo chroot . bash -c ". /.env; set; ./kaniko/executor -f /kaniko/workspace/Dockerfile --context=/kaniko/workspace/ --force --destination=$destination --cleanup"

